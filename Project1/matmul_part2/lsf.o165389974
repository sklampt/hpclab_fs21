Sender: LSF System <lsfadmin@eu-c7-111-02>
Subject: Job 165389974: <#!/bin/bash -l; #SBATCH --job-name=matrixmult;#SBATCH --time=00:30:00;#SBATCH --nodes=1;#SBATCH --output=matrixmult-%j.out;#SBATCH --error=matrixmult-%j.err; # load modules;if command -v module 1>/dev/null 2>&1; then;   module load gcc mkl;fi; export OMP_NUM_THREADS=10;export MKL_NUM_THREADS=10; echo "==== benchmark-naive ======================";./benchmark-naive | tee timing_basic_dgemm.data;echo;echo "==== benchmark-blas =======================";./benchmark-blas | tee timing_blas_dgemm.data;echo;echo "==== benchmark-blocked ====================";./benchmark-blocked | tee timing_blocked_dgemm.data; echo;echo "==== plot results =========================";gnuplot timing.gp> in cluster <euler> Done

Job <#!/bin/bash -l; #SBATCH --job-name=matrixmult;#SBATCH --time=00:30:00;#SBATCH --nodes=1;#SBATCH --output=matrixmult-%j.out;#SBATCH --error=matrixmult-%j.err; # load modules;if command -v module 1>/dev/null 2>&1; then;   module load gcc mkl;fi; export OMP_NUM_THREADS=10;export MKL_NUM_THREADS=10; echo "==== benchmark-naive ======================";./benchmark-naive | tee timing_basic_dgemm.data;echo;echo "==== benchmark-blas =======================";./benchmark-blas | tee timing_blas_dgemm.data;echo;echo "==== benchmark-blocked ====================";./benchmark-blocked | tee timing_blocked_dgemm.data; echo;echo "==== plot results =========================";gnuplot timing.gp> was submitted from host <eu-login-17> by user <sklampt> in cluster <euler> at Mon Mar 15 11:12:59 2021
Job was executed on host(s) <10*eu-c7-111-02>, in queue <normal.4h>, as user <sklampt> in cluster <euler> at Mon Mar 15 11:13:32 2021
</cluster/home/sklampt> was used as the home directory.
</cluster/home/sklampt/hpclab/hpclab_fs2021/Project1/matmul_part2> was used as the working directory.
Started at Mon Mar 15 11:13:32 2021
Terminated at Mon Mar 15 11:59:05 2021
Results reported at Mon Mar 15 11:59:05 2021

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
#!/bin/bash -l

#SBATCH --job-name=matrixmult
#SBATCH --time=00:30:00
#SBATCH --nodes=1
#SBATCH --output=matrixmult-%j.out
#SBATCH --error=matrixmult-%j.err

# load modules
if command -v module 1>/dev/null 2>&1; then
   module load gcc mkl
fi

export OMP_NUM_THREADS=10
export MKL_NUM_THREADS=10

echo "==== benchmark-naive ======================"
./benchmark-naive | tee timing_basic_dgemm.data
echo
echo "==== benchmark-blas ======================="
./benchmark-blas | tee timing_blas_dgemm.data
echo
echo "==== benchmark-blocked ===================="
./benchmark-blocked | tee timing_blocked_dgemm.data

echo
echo "==== plot results ========================="
gnuplot timing.gp

------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   26631.44 sec.
    Max Memory :                                 38 MB
    Average Memory :                             33.72 MB
    Total Requested Memory :                     10240.00 MB
    Delta Memory :                               10202.00 MB
    Max Swap :                                   -
    Max Processes :                              5
    Max Threads :                                15
    Run time :                                   2751 sec.
    Turnaround time :                            2766 sec.

The output (if any) follows:

==== benchmark-naive ======================
#Description:	Naive, three-loop dgemm.

Size: 31	Mflop/s:  11.6786	Percentage:  0.01
Size: 32	Mflop/s:  11.7132	Percentage:  0.01
Size: 96	Mflop/s:  11.6036	Percentage:  0.01
Size: 97	Mflop/s:  11.6309	Percentage:  0.01
Size: 127	Mflop/s:  11.6805	Percentage:  0.01
Size: 128	Mflop/s:   11.643	Percentage:  0.01
Size: 129	Mflop/s:  11.5919	Percentage:  0.01
Size: 191	Mflop/s:  11.6937	Percentage:  0.01
Size: 192	Mflop/s:  11.6692	Percentage:  0.01
Size: 229	Mflop/s:  11.6911	Percentage:  0.01
Size: 255	Mflop/s:  11.6888	Percentage:  0.01
Size: 256	Mflop/s:  11.6975	Percentage:  0.01
Size: 257	Mflop/s:  11.6839	Percentage:  0.01
Size: 319	Mflop/s:  11.6864	Percentage:  0.01
Size: 320	Mflop/s:   11.678	Percentage:  0.01
Size: 321	Mflop/s:   11.679	Percentage:  0.01
Size: 417	Mflop/s:  11.6978	Percentage:  0.01
Size: 479	Mflop/s:  11.6914	Percentage:  0.01
Size: 480	Mflop/s:  11.6931	Percentage:  0.01
Size: 511	Mflop/s:  11.6925	Percentage:  0.01
Size: 512	Mflop/s:  11.6918	Percentage:  0.01
Size: 639	Mflop/s:  11.6691	Percentage:  0.01
Size: 640	Mflop/s:  11.7017	Percentage:  0.01
Size: 767	Mflop/s:  11.6864	Percentage:  0.01
Size: 768	Mflop/s:  11.6695	Percentage:  0.01
Size: 769	Mflop/s:   11.697	Percentage:  0.01
#Average percentage of Peak = 0.00608172

==== benchmark-blas =======================
#Description:	Reference dgemm.

Size: 31	Mflop/s:  18748.4	Percentage:  9.76
Size: 32	Mflop/s:  23888.4	Percentage: 12.44
Size: 96	Mflop/s:  96446.7	Percentage: 50.23
Size: 97	Mflop/s:   100817	Percentage: 52.51
Size: 127	Mflop/s:   116898	Percentage: 60.88
Size: 128	Mflop/s:   133367	Percentage: 69.46
Size: 129	Mflop/s:   122743	Percentage: 63.93
Size: 191	Mflop/s:   201114	Percentage:104.75
Size: 192	Mflop/s:   206571	Percentage:107.59
Size: 229	Mflop/s:   181128	Percentage: 94.34
Size: 255	Mflop/s:   206935	Percentage:107.78
Size: 256	Mflop/s:   205667	Percentage:107.12
Size: 257	Mflop/s:   202504	Percentage:105.47
Size: 319	Mflop/s:   207317	Percentage:107.98
Size: 320	Mflop/s:   253019	Percentage:131.78
Size: 321	Mflop/s:   240209	Percentage:125.11
Size: 417	Mflop/s:   234457	Percentage:122.11
Size: 479	Mflop/s:   233795	Percentage:121.77
Size: 480	Mflop/s:   271013	Percentage:141.15
Size: 511	Mflop/s:   258671	Percentage:134.72
Size: 512	Mflop/s:   259948	Percentage:135.39
Size: 639	Mflop/s:   236504	Percentage:123.18
Size: 640	Mflop/s:   244075	Percentage:127.12
Size: 767	Mflop/s:   230329	Percentage:119.96
Size: 768	Mflop/s:   237652	Percentage:123.78
Size: 769	Mflop/s:   229176	Percentage:119.36
#Average percentage of Peak = 99.2186

==== benchmark-blocked ====================
#Description:	Naive, three-loop dgemm.

Size: 31	Mflop/s:  11.5041	Percentage:  0.01
Size: 32	Mflop/s:  11.6819	Percentage:  0.01
Size: 96	Mflop/s:  11.6385	Percentage:  0.01
Size: 97	Mflop/s:  11.6941	Percentage:  0.01
Size: 127	Mflop/s:  11.6869	Percentage:  0.01
Size: 128	Mflop/s:  11.6665	Percentage:  0.01
Size: 129	Mflop/s:  11.6547	Percentage:  0.01
Size: 191	Mflop/s:  11.6757	Percentage:  0.01
Size: 192	Mflop/s:  11.6793	Percentage:  0.01
Size: 229	Mflop/s:  11.6785	Percentage:  0.01
Size: 255	Mflop/s:  11.6693	Percentage:  0.01
Size: 256	Mflop/s:  11.6721	Percentage:  0.01
Size: 257	Mflop/s:  11.6794	Percentage:  0.01
Size: 319	Mflop/s:  11.6795	Percentage:  0.01
Size: 320	Mflop/s:  11.6736	Percentage:  0.01
Size: 321	Mflop/s:  11.6883	Percentage:  0.01
Size: 417	Mflop/s:  11.6577	Percentage:  0.01
Size: 479	Mflop/s:  11.6426	Percentage:  0.01
Size: 480	Mflop/s:  11.6531	Percentage:  0.01
Size: 511	Mflop/s:  11.6049	Percentage:  0.01
Size: 512	Mflop/s:  11.5926	Percentage:  0.01
Size: 639	Mflop/s:  11.5951	Percentage:  0.01
Size: 640	Mflop/s:  11.4937	Percentage:  0.01
Size: 767	Mflop/s:  11.4615	Percentage:  0.01
Size: 768	Mflop/s:  11.5232	Percentage:  0.01
Size: 769	Mflop/s:  11.4961	Percentage:  0.01
#Average percentage of Peak = 0.00605655

==== plot results =========================
